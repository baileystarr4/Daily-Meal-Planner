from openai import OpenAI
import os
from dotenv import load_dotenv

class MealPlanner:
    """
    A class that generates a meal plan for a single day using OpenAI's 
    Chat Completions API and a given daily calorie goal.

    """

    def __init__(self, calories):
        """
        Constructs all necessary attributes for the MealPlanner object 
        and creates the OpenAI client.

        Parameters
        ----------
        calories : int
            the user's daily calorie goal
        """
                
        self.calories = calories
        load_dotenv()
        self.client = OpenAI(api_key=os.getenv("API_KEY"))

    def get_meal_plan(self):
        """Returns a meal plan generated by OpenAI's Chat GPT 3.5 Turbo."""

        response = self.client.chat.completions.create(
        model="gpt-5-mini",
        messages=[
            {
                "role": "system",
                "content": (f"You are a meal planner used to help people meet "
                             "their weight goals. Given a daily calorie limit, "
                             "provide a meal plan for a single day. Include the "
                             "calories, necessary ingredients, and a recipe for "
                             "each meal. ")
            },
            {
                "role": "user", 
                "content": (f"Provide a {self.calories} calorie meal plan.")
            }
        ]
        )
        return response.choices[0].message.content
