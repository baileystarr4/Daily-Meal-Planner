from openai import OpenAI
import os
from dotenv import load_dotenv

class MealPlanner:
    """
    A class that generates a meal plan for a single day using OpenAI's 
    Chat Completions API and a given daily calorie goal.

    """

    def __init__(self, calories):
        """
        Constructs all necessary attributes for the MealPlanner object 
        and creates the OpenAI client.

        Parameters
        ----------
            calories : int
                the user's daily calorie goal
        """
                
        self.calories = calories
        load_dotenv()
        self.client = OpenAI(api_key=os.getenv("API_KEY"))

    def get_meal_plan(self):
        """Returns a meal plan generated by OpenAI's Chat GPT 3.5 Turbo."""

        response = self.client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {
                "role": "user", 
                "content": (f"Give a {self.calories} calorie meal plan for"
                            + " one day. Include the calories, necessary"
                            + " ingredients,and a recipe for each meal.")
                },
        ]
        )
        return response.choices[0].message.content
